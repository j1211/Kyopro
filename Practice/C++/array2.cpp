//文字列はchar型の配列で扱うことができます。
//
//文字列"abc"はコンピュータ上で、'a', 'b', 'c', '\0' (終端文字) と表現されます。
//(したがって、10文字の文字列を格納する場合は、サイズ11の配列が必要になります）

//今回は、20文字以下の文字列を読み込んで、それを逆順で表示するプログラムを作ります。

#include <iostream>
#include <cstring>		//文字列の長さ(終端文字を含めない)を取得する関数 strlen()を使うためのおまじない
using namespace std;

char s[21];			//文字を入れる箱が21個できる。(s[0], s[1], …, s[20])。末尾文字を含めると最大21文字になるので, s[20]では不十分。

int main() {
	int i;
	int n;
	
	cin >> s;		//文字列を入力するときは、char型配列の名前を指定するだけでOK。
	
	n = strlen(s);
	
	for (i = n - 1; i >= 0; i--) {
		cout << s[i];
	}
	cout << endl;
	
	return 0;
}


//余談：
//char型以外の配列で、配列名をcoutしてみると、なんか変な値がでます。実は、これが配列の先頭メモリ番地（先頭アドレス）なのです。
//
//char s[4] = {'a', 'b', 'c', '\0'}; とすると文字列"abc"を配列sに格納できます。
//宣言時であれば、char s[4] = "abc"; とすることもできます。s[3]には自動で'\0'が代入されます。
//
//あと、'A'と65は全く同じです。（65を出力するか'A'を出力するかは、データ型で決まります。）
//
//char型の配列で、配列名をcoutしてみると、文字列が出力されます。（char型の配列は文字列だと思ってくれるらしい）
